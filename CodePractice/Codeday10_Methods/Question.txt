Que-1
____________
Create a Java program that manages and displays details about a cricket player. Your program should include the following functionalities:

A class named CrickBuzz.
--------------------------
A method named assignDetail that takes the following parameters:
String name: The name of the player.
int totalRun: The total runs scored by the player.
int jersyNo: The jersey number of the player.
int matches: The number of matches played by the player.
String sportsName: The name of the sport. 
String countryName: The name of the country
Inside the assignDetail method:
 Verifications
___________________
|- if the totalRun is greater than zero 
|- if the jersyNo is greater than zero 
|- if the sports name is cricket then only 
   calculate the player's average runs by dividing totalRun by matches.
   Call another method displayDetail() to display the player's details, including the calculated average.
   If sportsName is not "cricket", print "This app is for showing the cricket player details".

A method named displayDetail that takes the following parameters:
----------------------------------------------------------------
String name: The name of the player.
int totalRun: The total runs scored by the player.
int jersyNo: The jersey number of the player.
int matches: The number of matches played by the player.
int average: The average runs scored by the player.
This method should print the player's details in a formatted manner.

A main method that creates an instance of Program04 and calls the assignDetail method with appropriate 
arguments to demonstrate the functionality.

Input as :
assignDetail("virat", 400,18, 5,"cricket");

Output as:
The name of the player :virat
The totalRun of the player :400
The jesryNo of the player :18
The matches played :5
The avergae of the player :80
---------------------------------------------------------------------------------------------------------------
Que-2
_____________________________
Create a Java class named CBSEResult_In that accepts and processes details of a student and calculates their grade based on their marks in five subjects. The class should contain methods to accept details, calculate the grade, and display the details and the calculated grade.

The method acceptDetailAndSubmit should accept the following parameters:
-------------------------------------------------------------------------
studentName (String): The name of the student.
rollNo (long): The roll number of the student.
schoolRegNo (String): The registration number of the school.
schoolName (String): The name of the school.
gender (char): The gender of the student.
citizenShip (String): The citizenship of the student.
board (String): The education board of the student.

Verification
___________________________________________________________
The program should check if the schoolRegNo is "CBSE01-100",
The citizenShip is "INDIA" (case insensitive),
and the board is "CBSE".
If these conditions are met, it should assign specific marks to the subjects:

If match
---------------------
Math: 90
Science: 85
English: 50
Social Science (sst): 90
Physical Education: 100

And after that it will call the method inside this method name as calculateGrade()
|- having 5 subject marks as parameter 
|- return type char 
|- method type non static 
|- modifier as public 

It should then calculate the average marks and assign a grade based on the following criteria:
----------------------------------------------------------------------------------------------
A: 80 < average <= 100
B: 60 < average <= 80
C: 40 < average <= 60
F: average <= 40

THIS METHOD WILL RETURN BACK THE GRADE TO THE CALLING PLACE AND THEN THE NEXT METHOD WILL ALL THE DETAILS 
OF THE STUDENT AND ALL SUBJECTS MARKS AND WITH THE GRADE WILL BE CALLED WHICH IS NAME AS 
|- DisplayDetails()
   |- Having the parameter as student details ,5 subject marks and grade 
   |- return type will be void 
   |- method type Non static 
   |- modifier as public 


Finally, the program should display the student details, marks, and the grade
If the conditions are not met, it should print an message.

Example
Given the following input:

INPUT AS:
____________________
studentName = "mahi"
rollNo = 00000007
schoolRegNo = "CBSE01-100"
schoolName = "DAV"
gender = 'M'
citizenShip = "INDIA"
board = "CBSE"

The expected output should be:
-------------------------------------------
The name of student : mahi
The rollNo : 7
The schoolRegNo  : CBSE01-100
The SchoolName : DAV
Gender : M
Citizenship : INDIA
Board : CBSE
_____________________________________________
==========Marks=================
                 Math || 90
                 Science || 85
                 English || 50
                 SocialScience || 90
                 PHE || 100
===================================
=============GRADE==================
THE TOTAL MARKS AS GRADE IS  A

-----------------------------------------------------------------
If the conditions are not met, the output should be:

The form submission not accepted
-----------------------------------------------------------------------------------------------------------
Que-3
____________
Write a Java program that includes a method to print characters in a specified range, with a specified number of characters per line. Your program should include the following:

A main method that calls a method print_Chars().
The print_Chars method should take three parameters:
char char1: The starting character.
char char2: The ending character.
int n: The number of characters to print per line.

The print_Chars method should print all characters from char1 to char2 inclusive,
with each line containing at most n characters. After every n characters, 
the method should print a newline.

For example, calling print_Chars('(', 'z', 20) should output the characters from '(' to 'z' with 20 characters per line.

Implement this functionality in a class named Program03.

Input as:
________________
Calling method as:   print_Chars('(', 'z', 20);

Solution as:
_________________
( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ;                                                                       
< = > ? @ A B C D E F G H I J K L M N O                                                                       
P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c                                                                       
d e f g h i j k l m n o p q r s t u v w                                                                       
x y z