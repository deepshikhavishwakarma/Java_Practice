

Coding questions:

1. WAP for the below requirement:
   Create a class
   Create a NSV in the class.
   Create a sub class
   Create NSV in sub class
   Create NSM in sub class
   Print the super class NSV and Sub class NSV inside the method
   Call the method from a main class which contains main method

 2. WAP for the below requirement:
   Create 2 NSV in super class
   Create 1 NSV & 1 NSM in sub class
   Display the super class & sub class variable inside NSM
   Create object and call the method from the main method


   3. A BLC class Student is given to you. It contains the following
   implementation.

      Instance Variables: studentId : int , name :String ,
       examFee:double

      Methods: displayDetails(): String , payFee() :double

      Define parameterized constructor and a toString method.

      Create two BLC sub classes of Student called DayScholar
       and Hosteller.
      Add the following implementations to each class.

      DayScholar:

      Instance Variables : transportFee:double ,

      Methods: Define parameterized constructor

      Hosteller:

      Instance Variables: hostelFee :double

      Methods: Define parameterized constructor

      Add the following methods in BOTH classes.

      Method: displayDetails(): This method should return a string
      containing the details of the student

      in the following format:

      Student [name=John Smith,studentId=123,examFee=100.0] OR

      DayScholar[transportFee=500, name=John Smith,studentId=123,
      examFee=100.0] and so on.

      Method: payFee(amount): This method takes amount as parameter
       that represents the fee

      provided. You must calculate and then return the remaining

       amount paid in excess. If excess is

      paid, the returned amount will be negative. The total fees
      that each student must pay must

      include all the fees applicable to that Student(examFees,
      transportFees, hostelFees as applicable).

      Subtract the given amount from total fee for each student
      and return the remaining amount.

      An ELC class Tester is given to you with a main method.
      Use this class to test your solution's

      classes and methods.



      Example Output:

      Student[name=John Smith,studentId=1,examFee=25000.0]

      DayScholar[TransportFee=5000.0,name=Brian Lara,studentId=2,
      examFee=25000.0]

      Remaining amount to pay is: 12000.0

      Hosteller[HostelFee=8000.0,name=Virat Kohli,studentId=3,
      examFee=25000.0]

      All Fees are clear